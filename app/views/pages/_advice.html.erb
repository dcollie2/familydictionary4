<% current_word = Word.last %>
<%#= current_word.defined_words.inspect %>
<% defined_words = Word.order("word").all %>
<script type="text/javascript">
  var width = 750,
      height = 300,
      distance = 50,
      charge = -3400,
      gravity = 2.2
        
  // d3.json("citations.json", function(error, links) {
  
  
  
    var nodes = [{"id": 1,"word": "Only"},{"id": 1,"word": "A"},{"id": 1,"word": "True"},{"id": 1,"word": "Fool"},{"id": 1,"word": "Tries"},{"id": 1,"word": "To"},{"id": 1,"word": "Bullshit"},{"id": 1,"word": "An"},{"id": 1,"word": "Expert"},{"id": 1,"word": "Idiot"},{"id": 1,"word": "Fuckwit"},{"id": 1,"word": "Me"},{"id": 1,"word": "About"},{"id": 1,"word": "Their"},{"id": 1,"word": "My"},{"id": 1,"word": "Area"},{"id": 1,"word": "Of"},{"id": 1,"word": "Expertise"}];
    var links = [{"source":0,"target":1,"value":1},{"source":1,"target":2,"value":8},{"source":2,"target":3,"value":10},{"source":4,"target":5,"value":10},{"source":5,"target":6,"value":10},{"source":6,"target":7,"value":10},{"source":7,"target":8,"value":10},{"source":2,"target":9,"value":10},{"source":2,"target":10,"value":10},{"source":6,"target":11,"value":10},{"source":12,"target":13,"value":10},{"source":12,"target":14,"value":10},{"source":13,"target":15,"value":10},{"source":14,"target":15,"value":10},{"source":15,"target":16,"value":10},{"source":16,"target":17,"value":10}];
  
  // Compute the distinct nodes from the links.
  links.forEach(function(link) {
      link.source = nodes[link.source] || 
          (nodes[link.source] = {name: link.source});
      link.target = nodes[link.target] || 
          (nodes[link.target] = {name: link.target});
      link.value = +link.value;
  });
  
  var force = d3.layout.force()
      .nodes(d3.values(nodes))
      .links(links)
      .size([width, height])
      .linkDistance(distance)
      .charge(charge)
      .gravity(gravity)
      .on("tick", tick)
      .start();
  
  var svg = d3.select(".contents").append("svg").attr("width", width).attr("height", height);
  
  // add the links and the arrows
  var path = svg.append("svg:g").selectAll("path")
      .data(force.links())
    .enter().append("svg:path")
      .attr("class", "link");

  // define the nodes
  var node = svg.selectAll(".node")
      .data(force.nodes())
      .enter().append("g")
      // .attr("xlink:href", function(d) { return "/words/" + d.name; })
      .attr("class", "node")
      .call(force.drag);

      // node.on("click", function(d) {
      //   d3.json("/words/" + d.name, function(json) {
      //     // d3.select("#div").text(json.message);
      //   });
      // });

  // add the nodes
  node.append("circle")
      .attr("r", 5);

  // add the text 
  node.append("text")
      .attr("x", 12)
      .attr("dy", ".35em")
      .text(function(d) { return d.word; });

  // add the curvy lines
  function tick() {
      path.attr("d", function(d) {
          var dx = d.target.x - d.source.x,
              dy = d.target.y - d.source.y,
              dr = Math.sqrt(dx * dx + dy * dy);
          return "M" + 
              d.source.x + "," + 
              d.source.y + "A" + 
              dr + "," + dr + " 0 0,1 " + 
              d.target.x + "," + 
              d.target.y;
      });

      node
          .attr("transform", function(d) { 
              return "translate(" + d.x + "," + d.y + ")"; });
  };

  // });
  
  
</script>