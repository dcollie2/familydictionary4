<% title @word.word %>
<% description @word.definition %>
<div class="row border-bottom">
  <div class="col-sm">
    <%= link_to "<em>&lt;</em><span class='word-nav-label'>#{@word.prior_by_date.full_word}</span>".html_safe, word_url(@word.prior_by_date), :class => "pointer left" if @word.prior_by_date.present? %>
  </div>
  <div class="col-sm text-center">
    <button class="btn btn-standard" id="mapModalButton" data-bs-toggle="modal" data-bs-target="#mapModal"><i class="bi bi-globe2"></i> Map</button>
  </div>
  <div class="col-sm">
    <%= link_to "<span class='word-nav-label'>#{@word.next_by_date.full_word}</span><em>&gt;</em>".html_safe, word_path(@word.next_by_date), :class => "pointer float-end" if @word.next_by_date.present? %>
  </div>
</div>

<article class="word">
  <div class="definition fs-2 pb-3">
    <h1><%= "#{@word.prefix} " unless @word.prefix.blank? %><%=h @word.word %></h1>
    <%= content_tag :h2, "/#{@word.phonetic}/  #{@word.syllables}".html_safe, class: 'fs-5 text-muted fst-italic' unless (@word.syllables.blank? && @word.phonetic.blank?) %>
    <div class="m-4" id="definition-text">
      <%= linkTerms(@word) %>
    </div>
  </div>
  <% if user_signed_in? %><p><%= link_to "Edit", edit_word_path(@word) %> <%= link_to "Destroy", @word, :method => :delete, :data => { :confirm => 'Are you sure?' } %></p><% end %>

    <div class="modal fade" id="mapModal" tabindex="-1" role="dialog" aria-labelledby="wordMap" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="wordMapModal">Word Map</h5>
            <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <% if @word.defined_elsewhere? %>
              <h5><%= @word.word %> gets a card from
                <% @word.defining_words.each do |word| %>
                  &nbsp;<%= link_to word.word.downcase, word_path(word) %>
                <% end %>
              </h5>
            <% else %>
              <h5>The phone never rings for <%= @word.word %></h5>
            <% end %>
            <% if @word.has_defined_words? %>
              <h5><%= @word.word %> contemplates
                <% @word.defined_words.each do |word| -%>
                  &nbsp;<%= link_to word.word.downcase, word_path(word) -%>
                <% end -%>
              </h5>
            <% else %>
              <h5><%= @word.word %> sulks in its room</h5>
            <% end %>
          </div>
        </div>
      </div>
    </div>


  <section id='definition-utilities' class="mt-2">
    <ul id="reference-list">
      <li>See also:</li>
      <li><a href="http://www.onelook.com/?w=<%= @word.word %>&amp;ls=b" target="_blank">Onelook</a></li>
      <li><a href="http://www.wordnik.com/words/<%= @word.word.downcase %>" target="_blank">Wordnik</a></li>
      <li><a href="http://en.wiktionary.org/wiki/<%= @word.word.downcase %>" target="_blank">Wiktionary</a></li>
      <li><a href="http://en.wikipedia.org/wiki/<%= @word.word.downcase %>" target="_blank">Wikipedia</a></li>
      <li><a href="http://wordsmith.org/anagram/anagram.cgi?anagram=<%= @word.word %>" target="_blank">Anagrams</a></li>
      <li><a href="http://www.flickr.com/search/?q=<%= @word.word.downcase %>&amp;z=e" target="_blank">Flickr</a></li>
    </ul>

    <div class="row row-cols-2 border-top">
      <div class="col">
        <%= audio_tag url_for(@word.audio), controls: true, preload: "none", class: 'mt-3' if @word.audio.present? %>
      </div>
      <div class="col">
    <div class="word-map">
      <script type="text/javascript">
          var width = 370,
              height = 300,
              distance = 50,
              charge = -3000,
              gravity = 2.2

          d3.json("../citations.json?word=<%= @word.slug.downcase -%>", function(error, links) {
              console.log(links);
              var nodes = {};

              // Compute the distinct nodes from the links.
              links.forEach(function(link) {
                  link.source = nodes[link.source] ||
                      (nodes[link.source] = {name: link.source});
                  link.target = nodes[link.target] ||
                      (nodes[link.target] = {name: link.target});
                  link.value = +link.value;
              });

                if (links.length == 0) {
                    nodes = Object.create(null);
                    nodes = Object.create(nodes, {
                    <%= escape_javascript(@word.slug) %>: {
                        'index': 1,
                        'name': '<%= @word.word %>'
                    }
                });
              };
              console.log(nodes);

              var force = d3.layout.force()
                  .nodes(d3.values(nodes))
                  .links(links)
                  .size([width, height])
                  .linkDistance(distance)
                  .charge(charge)
                  .gravity(gravity)
                  .on("tick", tick)
                  .start();

              var svg = d3.select(".word-map").append("svg").attr("width", width).attr("height", height);

              // add the links
              var path = svg.append("svg:g").selectAll("path")
                  .data(force.links())
                  .enter().append("svg:path")
                  .attr("class", "link");

              // define the nodes
              var node = svg.selectAll(".node")
                  .data(force.nodes())
                  .enter().append("a")
                  .attr("xlink:href", function(d) {return "/words/" + d.name})
                  .attr("class", "node")
                  .call(force.drag);

              if (links.length == 0) {
                  var message = svg.append("a").attr("xlink:href", function(d) {return "/words/" + "<%= @word.word.downcase %>"}).attr("class", "node");

                  message.append("circle").attr("cx", 150).attr("cy", 150).attr("r", 10);
                  message.append("text").attr("x", 165).attr("dy", ".35em").text("<%= @word.word %>").attr("y", 150);
              };

              // add the nodes
              node.append("circle")
                  .attr("r", 10);

              // add the text
              node.append("text")
                  .attr("x", 12)
                  .attr("dy", ".35em")
                  .text(function(d) { return d.name; });

              // add the curvy lines
              function tick() {
                  path.attr("d", function(d) {
                      var dx = d.target.x - d.source.x,
                          dy = d.target.y - d.source.y,
                          dr = Math.sqrt(dx * dx + dy * dy);
                      return "M" +
                          d.source.x + "," +
                          d.source.y + "A" +
                          dr + "," + dr + " 0 0,1 " +
                          d.target.x + "," +
                          d.target.y;
                  });

                  node
                      .attr("transform", function(d) {
                          return "translate(" + d.x + "," + d.y + ")"; });
              }
          });
      </script>
    </div>
    </div>
    <div id="images">
      <ul id="cbox"></ul>
    </div>

<!--    <p class="subscribe"><a href="http://feeds.feedburner.com/AnAbbreviatedFamilyDictionary"><%#= image_tag "feed-icon-14x14.png", :alt => "Subscribe to An Abbreviated Family Dictionary via RSS Feed" %> Subscribe to the Dictionary</a></p>-->

  </section>
</article>